"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const v=require("./parse.cjs"),j=require("node:path"),e=require("./utils.cjs"),R=require("node:url"),y=require("node:fs"),x=require("./proxy.cjs"),i=require("./options.cjs"),L=["no such file","Cannot find module"],C="Mock Not enabled";function _(T){const{scan:h,apiPrefix:M,forceMock:b,mockDir:S,timeout:E}=Object.assign(i.serverConfig,T??{});return i.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(c,u){if(h&&u.command==="serve")return{server:{watch:{ignored:[`**/${S}/**`]}}}},configureServer(c){const u=c.config.root;i.serverConfig.root=u;const N=j.join(c.config.root,"package.json"),O=JSON.parse(y.readFileSync(N,"utf-8"));if(i.serverConfig._esm=O.type==="module",h)return e.logger.info("‚è≥ Scan Watching..."),x.useProxyRes(c);c.middlewares.use(M,async(t,a,d)=>{var w,P;let o="",k="";try{let n=function(r,l=e.getContentTypeByPath(o)){l&&a.setHeader("Content-Type",l),e.logger.success(`‚úÖ Mock Successify ${e.colorize(o,"underline")}`),setTimeout(()=>{a.end(JSON.stringify(r))},E)};if(t.headers.referer&&(k=new URL((w=t.headers)==null?void 0:w.referer).searchParams.get("remote")??""),k!=="mock"&&!b)return e.logger.info("üîí Browser URL not found mcok Keyword"),d();const m=t.headers["content-type"],{encoding:f,fileExt:p}=e.useContentType(m),$=((P=t._parsedUrl)==null?void 0:P.pathname)??"";t.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",o=j.join(u,S,$+p);let s;if(!i.allowExt.includes(p)){const r=y.createReadStream(o),l=e.getContentTypeByPath(o);l&&a.setHeader("Content-Type",l),r.pipe(a),r.on("error",F=>{e.logger.error(F),r.destroy(),d()}),r.on("end",()=>{e.logger.success(`‚úÖ ReadStream End ${e.colorize(o,"underline")}`)}),r.on("close",()=>{r.destroyed||r.destroy()});return}if(p===".json")try{const r=y.readFileSync(o,{encoding:f});return n(JSON.parse(r))}catch(r){return e.logger.wran(`${r}; ${o}`),d()}if(i.serverConfig._esm?s=await import(R.pathToFileURL(o).href+"?t="+Date.now()):(require.cache&&delete require.cache[o],s=await require(o)),!(s!=null&&s.enabled))throw new Error(C);v.useParseQueryParams(t),v.useParseBody(t);let g=s.mock(t,a);g instanceof Promise&&(g=await g),n(g,"application/json")}catch(n){(n==null?void 0:n.message.indexOf(C))!==-1?e.logger.info(`üîí Mock Not Enabled! ${e.colorize(o,"underline")}`):L.some(m=>{var f;return((f=n==null?void 0:n.message)==null?void 0:f.indexOf(m))!==-1})?e.logger.wran(`‚ùå File Not Found! ${e.colorize(o,"underline")}`):console.error(n),d()}})}}}exports.createMockServer=_;
