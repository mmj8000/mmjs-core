"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const _=require("./parse.cjs"),h=require("node:path"),e=require("./utils.cjs"),$=require("node:url"),k=require("node:fs"),L=require("./proxy.cjs"),a=require("./options.cjs"),R=require("./ndos.cjs"),q=["no such file","Cannot find module"],F="Mock Not enabled",p=C=>{const{scan:w,apiPrefix:E,forceMock:T,mockDir:u,timeout:x}=Object.assign(a.serverConfig,C??{});return a.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(l,s){if(w&&s.command==="serve")return{server:{watch:{ignored:[`**/${u}/**`]}}}},configureServer(l){const s=l.config.root;a.serverConfig.root=s;const b=h.join(l.config.root,"package.json"),N=JSON.parse(k.readFileSync(b,"utf-8"));if(a.serverConfig._esm=N.type==="module",w)return e.logger.info("‚è≥ Scan Watching..."),L.useProxyRes(l);(async()=>{try{const t=await R.enhancedFindFiles(h.join(s,u),{recursive:!0,exclude:/node_modules|\.git/});p.__dyMatchPaths=t}catch(t){e.logger.error(t)}})(),l.middlewares.use(E,async(t,d,g)=>{var j,v;let o="",S="";try{let n=function(r,c=e.getContentTypeByPath(o)){c&&d.setHeader("Content-Type",c),e.logger.success(`‚úÖ Mock Successify ${e.colorize(o,"underline")}`),setTimeout(()=>{d.end(JSON.stringify(r))},x)};if(t.headers.referer&&(S=new URL((j=t.headers)==null?void 0:j.referer).searchParams.get("remote")??""),S!=="mock"&&!T)return e.logger.info("üîí Browser URL not found mcok Keyword"),g();const y=t.headers["content-type"],{encoding:f,fileExt:P}=e.useContentType(y),M=((v=t._parsedUrl)==null?void 0:v.pathname)??"";t.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",o=h.join(s,u,M+P);let i;if(!a.allowExt.includes(P)){const r=k.createReadStream(o),c=e.getContentTypeByPath(o);c&&d.setHeader("Content-Type",c),r.pipe(d),r.on("error",O=>{e.logger.error(O),r.destroy(),g()}),r.on("end",()=>{e.logger.success(`‚úÖ ReadStream End ${e.colorize(o,"underline")}`)}),r.on("close",()=>{r.destroyed||r.destroy()});return}if(!e.fileExists(o)){const r=h.join(s,u,M);o=e.findMatchingTemplatePath(p.__dyMatchPaths,r)||o}if(P===".json")try{const r=k.readFileSync(o,{encoding:f});return n(JSON.parse(r))}catch(r){return e.logger.wran(`${r}; ${o}`),g()}if(a.serverConfig._esm?i=await import($.pathToFileURL(o).href+"?t="+Date.now()):(require.cache&&delete require.cache[o],i=await require(o)),!(i!=null&&i.enabled))throw new Error(F);_.useParseQueryParams(t),_.useParseBody(t);let m=i.mock(t,d);m instanceof Promise&&(m=await m),n(m,"application/json")}catch(n){(n==null?void 0:n.message.indexOf(F))!==-1?e.logger.info(`üîí Mock Not Enabled! ${e.colorize(o,"underline")}`):q.some(y=>{var f;return((f=n==null?void 0:n.message)==null?void 0:f.indexOf(y))!==-1})?e.logger.wran(`‚ùå File Not Found! ${e.colorize(o,"underline")}`):console.error(n),g()}})}}};p.__dyMatchPaths=[];exports.createMockServer=p;
