"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const _=require("./parse.cjs"),P=require("node:path"),e=require("./utils.cjs"),j=require("node:url"),v=require("node:fs"),x=require("./proxy.cjs"),c=require("./options.cjs"),T=require("./ndos.cjs"),N=["no such file","Cannot find module"],E="Mock Not enabled",S=s=>(Object.assign(c.serverConfig,c._initServerConfig,s??{}),c.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(n,a){const{scan:u,mockDir:l}=c.serverConfig;if(u&&a.command==="serve")return{server:{watch:{ignored:[`**/${l}/**`]}}}},configureServer(n){const{scan:a,watchDynamicFile:u,apiPrefix:l,mockDir:m}=c.serverConfig,p=n.config.root;c.serverConfig.root=p;const o=P.join(n.config.root,"package.json"),y=JSON.parse(v.readFileSync(o,"utf-8"));if(c.serverConfig._esm=y.type==="module",a)return e.logger.info("‚è≥ Scan Watching..."),x.useProxyRes(n);const h=P.join(p,m);if(u){n.watcher.off(m,d);const i=n.watcher.add(h);i.on("add",d),i.on("unlink",d),i.on("unlinkDir",d)}d();async function d(){try{const i=await T.enhancedFindFiles(h,{recursive:!0,exclude:/node_modules|\.git/});S.__dyMatchPaths=i}catch(i){e.logger.error(i)}}let r=[];if(Array.isArray(l))r.push(...l);else if(l)r.push(l);else{e.logger.error("API Prefix Non-standard");return}r.forEach(i=>{n.middlewares.use(i,D)})}});S.__dyMatchPaths=[];async function D(s,n,a){var h,d;const{root:u,forceMock:l,mockDir:m,timeout:p}=c.serverConfig;let o="",y="";try{let r=function(t,g=e.getContentTypeByPath(o)){g&&n.setHeader("Content-Type",g),e.logger.success(`‚úÖ Mock Successify ${e.colorize(o,"underline")}`),setTimeout(()=>{n.end(JSON.stringify(t))},p)};if(s.headers.referer&&(y=new URL((h=s.headers)==null?void 0:h.referer).searchParams.get("remote")??""),y!=="mock"&&!l)return e.logger.info("üîí Browser URL not found mcok Keyword"),a();const i=s.headers[e.getHeaderMimeTypeKey(s)],{encoding:k,fileExt:C}=e.useContentType(i),M=((d=s._parsedUrl)==null?void 0:d.pathname)??"";s.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",o=P.join(u,m,M+C);let f;if(!c.allowExt.includes(C)){const t=v.createReadStream(o),g=e.getContentTypeByPath(o);g&&n.setHeader("Content-Type",g),t.pipe(n),t.on("error",F=>{e.logger.error(F),t.destroy(),a()}),t.on("end",()=>{e.logger.success(`‚úÖ ReadStream End ${e.colorize(o,"underline")}`)}),t.on("close",()=>{t.destroyed||t.destroy()});return}if(!e.fileExists(o)){const t=P.join(u,m,M);o=e.findMatchingTemplatePath(S.__dyMatchPaths,t)||o}if(o.endsWith(".json"))try{const t=v.readFileSync(o,{encoding:k});return r(JSON.parse(t))}catch(t){return e.logger.wran(`${t}; ${o}`),a()}if(c.serverConfig._esm?f=await import(j.pathToFileURL(o).href+"?t="+Date.now()):(require.cache&&delete require.cache[o],f=await require(o)),!(f!=null&&f.enabled))throw new Error(E);_.useParseQueryParams(s),_.useParseBody(s);let w=f.mock(s,n);w instanceof Promise&&(w=await w),r(w,"application/json")}catch(r){(r==null?void 0:r.message.indexOf(E))!==-1?e.logger.info(`üîí Mock Not Enabled! ${e.colorize(o,"underline")}`):N.some(i=>{var k;return((k=r==null?void 0:r.message)==null?void 0:k.indexOf(i))!==-1})?e.logger.wran(`‚ùå File Not Found! ${e.colorize(o,"underline")}`):console.error(e.uniBeforeStrLog(),(r==null?void 0:r.message)||r),a()}}exports.createMockServer=S;
