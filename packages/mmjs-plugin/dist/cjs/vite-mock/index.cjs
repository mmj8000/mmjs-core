"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const M=require("./parse.cjs"),h=require("node:path"),o=require("./utils.cjs"),C=require("node:fs"),F=require("./proxy.cjs"),i=require("./options.cjs"),_=require("./ndos.cjs"),S=s=>(Object.assign(i.serverConfig,i._initServerConfig,s??{}),i.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(n,a){const{scan:d,mockDir:c}=i.serverConfig;if(d&&a.command==="serve")return{server:{watch:{ignored:[`**/${c}/**`]}}}},configureServer(n){const{scan:a,watchDynamicFile:d,apiPrefix:c,mockDir:m}=i.serverConfig,y=n.config.root;i.serverConfig.root=y;const v=h.join(n.config.root,"package.json"),t=JSON.parse(C.readFileSync(v,"utf-8"));if(i.serverConfig._esm=t.type==="module",a)return o.logger.info("‚è≥ Scan Watching..."),F.useProxyRes(n);const f=h.join(y,m);if(d){n.watcher.off(m,l);const e=n.watcher.add(f);e.on("add",l),e.on("unlink",l),e.on("unlinkDir",l)}l();async function l(){try{const e=await _.enhancedFindFiles(f,{recursive:!0,exclude:/node_modules|\.git/});S.__dyMatchPaths=e}catch(e){o.logger.error(e)}}let u=[];if(Array.isArray(c))u.push(...c);else if(c)u.push(c);else{o.logger.error("API Prefix Non-standard");return}u.forEach(e=>{n.middlewares.use(e,T)})}});S.__dyMatchPaths=[];async function T(s,n,a){var l,u;const{root:d,forceMock:c,mockDir:m,timeout:y,downloadExtensions:v}=i.serverConfig;let t="",f="";try{let e=function(r,p=o.getContentTypeByPath(t)){p&&n.setHeader("Content-Type",p),o.logger.success(`‚úÖ Mock Successify ${o.colorize(t,"underline")}`),setTimeout(()=>{n.end(JSON.stringify(r))},y)};if(s.headers.referer&&(f=new URL((l=s.headers)==null?void 0:l.referer).searchParams.get("remote")??""),f!=="mock"&&!c)return o.logger.info("üîí Browser URL not found mcok Keyword"),a();const E=s.headers[o.getHeaderMimeTypeKey(s)],{encoding:k,fileExt:x}=o.useContentType(E),j=((u=s._parsedUrl)==null?void 0:u.pathname)??"";s.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",n.setHeader("x-custom-response-header","vite-plugin-mmjs-mock"),t=h.join(d,m,j+x);let g;if(!i.allowExt.includes(x)){const r=C.createReadStream(t),p=o.getContentTypeByPath(t);if(n.setHeader("Content-Type",p||"application/octet-stream"),v.includes(x)){const P=h.basename(t);n.setHeader("Content-Disposition",`attachment; filename="${P}"`),n.setHeader("download-filename",P)}r.pipe(n),r.on("error",P=>{o.logger.error(P),r.destroy(),a()}),r.on("end",()=>{o.logger.success(`‚úÖ ReadStream End ${o.colorize(t,"underline")}`)}),r.on("close",()=>{r.destroyed||r.destroy()});return}if(!o.fileExists(t)){const r=h.join(d,m,j);t=o.findMatchingTemplatePath(S.__dyMatchPaths,r)||t}if(t.endsWith(".json"))try{const r=C.readFileSync(t,{encoding:k});return e(JSON.parse(r))}catch(r){return o.logger.wran(`${r}; ${t}`),a()}if(g=await o.dynamicImport(t),!(g!=null&&g.enabled))throw new Error(i.mockNoEnabledStr);M.useParseQueryParams(s),M.useParseBody(s);let w=g.mock(s,n);w instanceof Promise&&(w=await w),e(w,"application/json")}catch(e){(e==null?void 0:e.message.indexOf(i.mockNoEnabledStr))!==-1?o.logger.info(`üîí Mock Not Enabled! ${o.colorize(t,"underline")}`):i.notFileErrMsg.some(E=>{var k;return((k=e==null?void 0:e.message)==null?void 0:k.indexOf(E))!==-1})?o.logger.wran(`‚ùå File Not Found! ${o.colorize(t,"underline")}`):console.error(o.uniBeforeStrLog(),(e==null?void 0:e.message)||e,o.colorize(t,"underline")),a()}}exports.createMockServer=S;
