"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const M=require("./parse.cjs"),S=require("node:path"),e=require("./utils.cjs"),v=require("node:fs"),x=require("./proxy.cjs"),s=require("./options.cjs"),F=require("./ndos.cjs"),w=c=>(Object.assign(s.serverConfig,s._initServerConfig,c??{}),s.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(n,a){const{scan:u,mockDir:l}=s.serverConfig;if(u&&a.command==="serve")return{server:{watch:{ignored:[`**/${l}/**`]}}}},configureServer(n){const{scan:a,watchDynamicFile:u,apiPrefix:l,mockDir:g}=s.serverConfig,y=n.config.root;s.serverConfig.root=y;const o=S.join(n.config.root,"package.json"),p=JSON.parse(v.readFileSync(o,"utf-8"));if(s.serverConfig._esm=p.type==="module",a)return e.logger.info("‚è≥ Scan Watching..."),x.useProxyRes(n);const m=S.join(y,g);if(u){n.watcher.off(g,d);const i=n.watcher.add(m);i.on("add",d),i.on("unlink",d),i.on("unlinkDir",d)}d();async function d(){try{const i=await F.enhancedFindFiles(m,{recursive:!0,exclude:/node_modules|\.git/});w.__dyMatchPaths=i}catch(i){e.logger.error(i)}}let r=[];if(Array.isArray(l))r.push(...l);else if(l)r.push(l);else{e.logger.error("API Prefix Non-standard");return}r.forEach(i=>{n.middlewares.use(i,_)})}});w.__dyMatchPaths=[];async function _(c,n,a){var m,d;const{root:u,forceMock:l,mockDir:g,timeout:y}=s.serverConfig;let o="",p="";try{let r=function(t,f=e.getContentTypeByPath(o)){f&&n.setHeader("Content-Type",f),e.logger.success(`‚úÖ Mock Successify ${e.colorize(o,"underline")}`),setTimeout(()=>{n.end(JSON.stringify(t))},y)};if(c.headers.referer&&(p=new URL((m=c.headers)==null?void 0:m.referer).searchParams.get("remote")??""),p!=="mock"&&!l)return e.logger.info("üîí Browser URL not found mcok Keyword"),a();const i=c.headers[e.getHeaderMimeTypeKey(c)],{encoding:k,fileExt:E}=e.useContentType(i),C=((d=c._parsedUrl)==null?void 0:d.pathname)??"";c.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",o=S.join(u,g,C+E);let h;if(!s.allowExt.includes(E)){const t=v.createReadStream(o),f=e.getContentTypeByPath(o);f&&n.setHeader("Content-Type",f),t.pipe(n),t.on("error",j=>{e.logger.error(j),t.destroy(),a()}),t.on("end",()=>{e.logger.success(`‚úÖ ReadStream End ${e.colorize(o,"underline")}`)}),t.on("close",()=>{t.destroyed||t.destroy()});return}if(!e.fileExists(o)){const t=S.join(u,g,C);o=e.findMatchingTemplatePath(w.__dyMatchPaths,t)||o}if(o.endsWith(".json"))try{const t=v.readFileSync(o,{encoding:k});return r(JSON.parse(t))}catch(t){return e.logger.wran(`${t}; ${o}`),a()}if(h=await e.dynamicImport(o),!(h!=null&&h.enabled))throw new Error(s.mockNoEnabledStr);M.useParseQueryParams(c),M.useParseBody(c);let P=h.mock(c,n);P instanceof Promise&&(P=await P),r(P,"application/json")}catch(r){(r==null?void 0:r.message.indexOf(s.mockNoEnabledStr))!==-1?e.logger.info(`üîí Mock Not Enabled! ${e.colorize(o,"underline")}`):s.notFileErrMsg.some(i=>{var k;return((k=r==null?void 0:r.message)==null?void 0:k.indexOf(i))!==-1})?e.logger.wran(`‚ùå File Not Found! ${e.colorize(o,"underline")}`):console.error(e.uniBeforeStrLog(),(r==null?void 0:r.message)||r,e.colorize(o,"underline")),a()}}exports.createMockServer=w;
