"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const g=require("./parse.cjs"),S=require("node:path"),n=require("./utils.cjs"),$=require("node:url"),v=require("node:fs"),q=require("./proxy.cjs"),a=require("./options.cjs"),x=require("mime-types"),E=["no such file","Cannot find module"],j="Mock Not enabled";function L(P){const{scan:m,apiPrefix:M,forceMock:b,mockDir:p,timeout:C,fileExt:h}=Object.assign(a.serverConfig,P??{});return a.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(i,l){if(m&&l.command==="serve")return{server:{watch:{ignored:[`**/${p}/**`]}}}},configureServer(i){const l=i.config.root;a.serverConfig.root=l;const N=S.join(i.config.root,"package.json"),O=JSON.parse(v.readFileSync(N,"utf-8"));if(a.serverConfig._esm=O.type==="module",m)return n.logger.info("‚è≥ Scan Watching..."),q.useProxyRes(i);i.middlewares.use(M,async(t,u,f)=>{var k,w;let e="",y="";try{let o=function(c,F=x.contentType(e)){u.setHeader("Content-Type",F),n.logger.success(`‚úÖ Mock Successify ${n.colorize(e,"underline")}`),setTimeout(()=>{u.end(JSON.stringify(c))},C)};if(t.headers.referer&&(y=new URL((k=t.headers)==null?void 0:k.referer).searchParams.get("remote")??""),y!=="mock"&&!b)return n.logger.info("üîí Browser URL not found mcok Keyword"),f();g.useParseQueryParams(t),g.useParseBody(t);const d=((w=t._parsedUrl)==null?void 0:w.pathname)??"";t.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",e=S.join(l,p,d+h);let r;if(h===".json")try{const c=v.readFileSync(e,{encoding:g.getCharset(t)});return o(JSON.parse(c))}catch(c){return n.logger.wran(`${c}; ${e}`),f()}else a.serverConfig._esm?r=await import($.pathToFileURL(e).href+"?t="+Date.now()):(require.cache&&delete require.cache[e],r=await require(e));if(!(r!=null&&r.enabled))throw new Error(j);let s=r.mock(t,u);s instanceof Promise&&(s=await s),s!==void 0&&o(s,"application/json")}catch(o){(o==null?void 0:o.message.indexOf(j))!==-1?n.logger.info(`üîí Mock Not Enabled! ${n.colorize(e,"underline")}`):E.some(d=>{var r;return((r=o==null?void 0:o.message)==null?void 0:r.indexOf(d))!==-1})?n.logger.wran(`‚ùå File Not Found! ${n.colorize(e,"underline")}`):console.error(o),f()}})}}}exports.createMockServer=L;
