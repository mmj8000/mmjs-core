"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const T=require("./parse.cjs"),g=require("node:path"),e=require("./utils.cjs"),D=require("node:url"),C=require("node:fs"),q=require("./proxy.cjs"),i=require("./options.cjs"),U=require("./ndos.cjs"),z=["no such file","Cannot find module"],x="Mock Not enabled",y=b=>(Object.assign(i.serverConfig,i._initServerConfig,b??{}),i.updateLogLevelState(),{name:"vite:mmjs:mock",apply:"serve",enforce:"post",config(s,k){const{scan:w,mockDir:P}=i.serverConfig;if(w&&k.command==="serve")return{server:{watch:{ignored:[`**/${P}/**`]}}}},configureServer(s){const{scan:k,apiPrefix:w,forceMock:P,mockDir:l,timeout:L}=i.serverConfig,d=s.config.root;i.serverConfig.root=d;const N=g.join(s.config.root,"package.json"),O=JSON.parse(C.readFileSync(N,"utf-8"));if(i.serverConfig._esm=O.type==="module",k)return e.logger.info("‚è≥ Scan Watching..."),q.useProxyRes(s);const R=g.join(d,l);s.watcher.off(l,u);const S=s.watcher.add(R);S.on("add",u),S.on("unlink",u),S.on("unlinkDir",u),u();async function u(){try{const n=await U.enhancedFindFiles(g.join(d,l),{recursive:!0,exclude:/node_modules|\.git/});y.__dyMatchPaths=n}catch(n){e.logger.error(n)}}s.middlewares.use(w,async(n,f,m)=>{var F,M;let o="",_="";try{let r=function(t,a=e.getContentTypeByPath(o)){a&&f.setHeader("Content-Type",a),e.logger.success(`‚úÖ Mock Successify ${e.colorize(o,"underline")}`),setTimeout(()=>{f.end(JSON.stringify(t))},L)};if(n.headers.referer&&(_=new URL((F=n.headers)==null?void 0:F.referer).searchParams.get("remote")??""),_!=="mock"&&!P)return e.logger.info("üîí Browser URL not found mcok Keyword"),m();const j=n.headers["content-type"],{encoding:h,fileExt:v}=e.useContentType(j),E=((M=n._parsedUrl)==null?void 0:M.pathname)??"";n.headers["x-custom-request-header"]="vite-plugin-mmjs-mock",o=g.join(d,l,E+v);let c;if(!i.allowExt.includes(v)){const t=C.createReadStream(o),a=e.getContentTypeByPath(o);a&&f.setHeader("Content-Type",a),t.pipe(f),t.on("error",$=>{e.logger.error($),t.destroy(),m()}),t.on("end",()=>{e.logger.success(`‚úÖ ReadStream End ${e.colorize(o,"underline")}`)}),t.on("close",()=>{t.destroyed||t.destroy()});return}if(!e.fileExists(o)){const t=g.join(d,l,E);o=e.findMatchingTemplatePath(y.__dyMatchPaths,t)||o}if(v===".json")try{const t=C.readFileSync(o,{encoding:h});return r(JSON.parse(t))}catch(t){return e.logger.wran(`${t}; ${o}`),m()}if(i.serverConfig._esm?c=await import(D.pathToFileURL(o).href+"?t="+Date.now()):(require.cache&&delete require.cache[o],c=await require(o)),!(c!=null&&c.enabled))throw new Error(x);T.useParseQueryParams(n),T.useParseBody(n);let p=c.mock(n,f);p instanceof Promise&&(p=await p),r(p,"application/json")}catch(r){(r==null?void 0:r.message.indexOf(x))!==-1?e.logger.info(`üîí Mock Not Enabled! ${e.colorize(o,"underline")}`):z.some(j=>{var h;return((h=r==null?void 0:r.message)==null?void 0:h.indexOf(j))!==-1})?e.logger.wran(`‚ùå File Not Found! ${e.colorize(o,"underline")}`):console.error(r),m()}})}});y.__dyMatchPaths=[];exports.createMockServer=y;
